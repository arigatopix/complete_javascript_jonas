/**************************
 *!  Variable and Data Type
 */

/* 
var a = 20;

a = "Hello";

console.log(a);

let b = 20;

console.log(b);

b = "hello";
console.log(b);
 */

/* 
// String
var firstName = "Teeruch";
// ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å ‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡∏ç‡πà ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å camel case
var lastName = "Kaewsritas";
console.log(firstName);

// Number
var age = 26;

// Boolean
var fullAge = true; 
console.log(fullAge);

// undefined ‡∏Ñ‡∏∑‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏£
var job;
console.log(job);

job = "Engineer";
console.log(job);

// Variable naming rules
// ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡∏´‡∏£‡∏∑‡∏≠ boolean ‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤
// var 3aaa = 123;

// ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ function ‡πÄ‡∏ä‡πà‡∏ô var if, var delete
 */

/**************************
 *!  Variable mutation and type coercion (‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö ‡∏Å‡∏î‡∏î‡∏±‡∏ô)
 */
/* 
var firstName = "Teeruch";
var age = 26;

//? Type coercion (‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö ‡∏Å‡∏î‡∏î‡∏±‡∏ô)
// ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô data type ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ string + Number
console.log(firstName + " " + age);

// ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® Vaiable ‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏±‡∏á
var job, isMarried;
job = "Engineer";
isMarried = false;
console.log(job);

// ‡∏´‡∏•‡∏±‡∏á‡∏™‡∏∏‡∏î‡πÄ‡∏õ‡πá‡∏ô false ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ js converse Data tyle ‡πÄ‡∏õ‡πá‡∏ô string
console.log(
    firstName +
        " is a " +
        age +
        " year old " +
        job +
        ". Is he married? " +
        isMarried
);

// Variable mutation ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô python
// ‡πÄ‡∏Ñ‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® age ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏ñ‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö ‡∏à‡∏∞ overwrite
age = "twenty six";
job = "Photographer";

alert(
    firstName +
        " is a " +
        age +
        " year old " +
        job +
        ". Is he married? " +
        isMarried
);

//? promt ‡∏Ñ‡∏∑‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å client
var lastName = prompt("What is his lastname ?");
console.log(firstName + " " + lastName);
 */

/**************************
 *!  Basic operators
 */

// var year = 2019;
// var yearBas = year - 26;
// var yearAiib = year - 27;
/* 
//* Shorthand
var year, yearBas, yearAiib;

now = 2019;
ageBas = 26;
ageAiib = 27;

// Math operators
yearBas = now - ageBas;
yearAiib = now - ageAiib;

console.log(yearBas);

console.log(now + 2);
console.log(now + 2);
console.log(now / 10);

// Logical operator | ‡∏™‡∏≠‡∏á‡∏™‡∏¥‡πà‡∏á ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ô
var older = ageBas > ageAiib;
console.log(older);

//? typeof operator ‡πÄ‡∏ä‡πá‡∏Ñ type ‡∏Ç‡∏≠‡∏á variable | ‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö
console.log(typeof older);
console.log(typeof ageBas);
console.log(typeof "Hello World");

var x;
console.log(typeof x); // undefined
 */

/**************************
 *! Operator precedence | ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô
 */
/* 
var now = 2019;
var yearJohn = 1989;
var fullAge = 18;

// Multiple operators
var isFullAge = now - yearJohn >= fullAge; // true
console.log(isFullAge);
// ? Order ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏•‡∏ö (-) ‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤ ‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡∏Ñ‡∏¥‡∏î‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏≤‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö (>=) ‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á
// ? = ‡∏≠‡∏¢‡∏π‡πà‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á isFullAge ‡∏Ñ‡∏∑‡∏≠ true

// Grouping
var ageJohn = now - yearJohn;
var ageMark = 35;
var average = (ageJohn + ageMark) / 2;
// ? ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏à‡∏∞‡∏´‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô precedence ‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏ö‡∏ß‡∏Å ‡∏ã‡∏∂‡πà‡∏á‡∏ú‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏´‡∏≤ average
// ?‡πÉ‡∏™‡πà‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö () ‡∏à‡∏∞‡∏Ñ‡∏¥‡∏î‡πÉ‡∏ô‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡∏Å‡πà‡∏≠‡∏ô ‡∏≠‡∏¢‡∏π‡πà‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á recedence
console.log(average);

// Multiple operators 
var x, y; // undefine
x = y = (3 + 5) * 4 - 6; //8 * 4 - 6 // 32 - 6 // 26
// 26 ‡πÉ‡∏™‡πà y ‡πÅ‡∏•‡∏∞ y ‡πÉ‡∏™‡πà x
// ‡∏•‡∏≥‡∏î‡∏±‡∏ö precedence ‡∏Ñ‡∏∑‡∏≠ () , * , / , + / -
// ? ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö ‡∏ñ‡∏π‡∏Å‡∏™‡∏±‡πà‡∏á‡∏à‡∏≤‡∏Å right to left ‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å +,-, >,< ‡∏à‡∏∞‡∏ã‡πâ‡∏≤‡∏¢‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ç‡∏ß‡∏≤
console.log(x, y);

// More operators
x *= 2; // x = x * 2;
// right to left ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô

x += 10; // x = x + 10;
console.log(x);

x--; // x += 1;
console.log(x);
 */

/*****************************
 * TODO CODING CHALLENGE 1
 */

/*
Mark and John are trying to compare their BMI (Body Mass Index), which is calculated using the formula: BMI = mass / height^2 = mass / (height * height). (mass in kg and height in meter).

1. Store Mark's and John's mass and height in variables
2. Calculate both their BMIs
3. Create a boolean variable containing information about whether Mark has a higher BMI than John.
4. Print a string to the console containing the variable from step 3. (Something like "Is Mark's BMI higher than John's? true"). 

GOOD LUCK üòÄ
*/
/* 
var massMark, massJohn, heightMark, heightJohn, bmiMark, bmiJohn, compare;

massMark = 95; // kg
heightMark = 1.7; // m

massJohn = 62; // kg
heightJohn = 1.58; // meter

bmiMark = massMark / (heightMark * heightMark);
// console.log(bmiMark);
bmiJohn = massJohn / (heightJohn * heightJohn);
// console.log(bmiJohn);

compare = bmiMark > bmiJohn;
// true or false
console.log("Is Mark's BMI higher than John's " + compare);

// use if/else statement.
if (bmiMark > bmiJohn) {
    console.log("Is Mark's BMI higher than John's.");
} else {
    console.log("Is Mark's BMI less than John's.");
}
 */

/**************************
 *! If / else statements
 */
/* 
var firstName = "John";
var civilStatus = "single";

if (civilStatus === "married") {
    //* ‡πÉ‡∏ô if ‡πÄ‡∏õ‡πá‡∏ô boolean ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç true
    // * ‡∏ï‡πà‡∏≠‡∏á‡πÉ‡∏™ () ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö boolean ‡∏î‡πâ‡∏ß‡∏¢
    // ‡∏°‡∏µ‡πÅ‡∏ö‡∏ö == ‡πÅ‡∏•‡∏∞ ===
    // ‡πÉ‡∏ô‡∏õ‡∏µ‡∏Å‡∏Å‡∏≤‡∏Ñ‡∏∑‡∏≠ block state
    console.log(firstName + " is married.");
} else {
    //? ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç false
    console.log(firstName + " will hopefully marry soon.");
}

var isMarried = true;
if (isMarried) {
    //? isMarried ‡πÄ‡∏õ‡πá‡∏ô boolean ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏≠‡∏∞‡πÑ‡∏£ (===)
    console.log(firstName + " is married.");
} else {
    console.log(firstName + " will hopefully marry soon.");
}
 */

/**************************
 *! Boolean logic
 * && and , || or , ! not
 */
/* 
var firstName = "John";
var age = 20;

if (age < 13) {
    console.log(firstName + " is a boy.");
} else if (age >= 13 && age < 20) {
    // >=,< ‡∏°‡∏µ precedence ‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤ &&
    console.log(firstName + " is a teenager.");
} else if (age => 20 && age < 30) {
    console.log(firstName + " is a young man.");
} else {
    console.log(firstName + " is a man.");
}
 */

/**************************
 *! The Ternary Operator and Switch Statements
 */

// Ternary 3 ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÉ‡∏ô 1 line
/* 
var firstName = "John";
var age = 20;
//* condition ? if block : else block
age >= 18
    ? console.log(firstName + " drinks beer.")
    : console.log(firstName + " drink juice.");
 */

/*
ex.2
var drink = age >= 18 ? "beer" : "juice";
console.log("Drink " + drink + ".");
 */

/* same above
if (age >= 18) {
    var drink = "beer";
} else {
    var drink = "juice";
}
console.log("Drink " + drink + ".");
*/

//? Switch Statement.
/* 
switch (expression) {
    case value1:
      //Statements executed when the
      //result of expression matches value1
      [break;]
      [default:
        //Statements executed when none of
        //the values match the value of the expression
        [break;]]
}
 */

/*
var job = "teacher";
switch (job) {
    case "teacher":
    case "instructor":
        //? anathor case ‡πÑ‡∏î‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô
        console.log(firstName + " teaches kids how to code.");
        break; //? ‡πÉ‡∏™‡πà break ‡∏Å‡∏£‡∏ì‡∏µ true ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡πá‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏ó‡∏≥ case ‡∏≠‡∏∑‡πà‡∏ô
    case "driver":
        console.log(firstName + " drives an uber.");
        break;
    case "designer":
        console.log(firstName + " designs beautiful websites.");
        break;
    // ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÑ‡∏´‡∏ô‡πÄ‡∏•‡∏¢ ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà break ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô case ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    default:
        console.log(firstName + " does somthing.");
}

// Same above if / eles but clean
var firstName = "John";
var age = 16;
switch (true) {
    // ! ‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å‡πÉ‡∏™‡πà variable switch(age) ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏¥‡∏î
    // ? ‡∏ñ‡πâ‡∏≤ case ‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡∏ñ‡∏π‡∏Å break ‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πá‡∏Ñ case ‡∏≠‡∏∑‡πà‡∏ô
    case age < 13: // true or false
        console.log(firstName + " is a boy.");
        break;
    case age >= 13 && age < 20:
        console.log(firstName + " is a teenager.");
        break;
    case age >= 20 && age < 30:
        console.log(firstName + " is a young man.");
        break;
    default:
        console.log(firstName + " is a man.");
}
*/

/**************************
 *! Truthy and Falsy values and equlity operators
 */
/* 
//? falsy values : undefined, null, 0, '' (empty), NaN (Not a Number)
//? truthy values : NOT falsy values

var height;
height = 0;
if (height || height === 0) {
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î height undefined , ‡∏Å‡πá‡πÄ‡∏•‡∏¢‡πÄ‡∏õ‡πá‡∏ô false
    // ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô falsy ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ or ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ
    console.log("Variable is defined.");
} else {
    console.log("Variable has NOT been defined.");
}

// Equlity operators

height = 23;
if (height == "23") {
    console.log("The == Operator does type coercion.");
    //? = ‡∏Ñ‡∏∑‡∏≠ assign variable | right to left
    //? == ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô data type ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô (converse number to string : left to right)
    //? === strick equality ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£ compare true false | left to right
} else {
    console;
}
 */

/*****************************
 * TODO CODING CHALLENGE 2
 */

/*
John and Mike both play basketball in different teams. In the latest 3 games, John's team scored 89, 120 and 103 points, while Mike's team scored 116, 94 and 123 points.

1. Calculate the average score for each team
2. Decide which teams wins in average (highest average score), and print the winner to the console. Also include the average score in the output.
3. Then change the scores to show different winners. Don't forget to take into account there might be a draw (the same average score)

4. EXTRA: Mary also plays basketball, and her team scored 97, 134 and 105 points. Like before, log the average winner to the console. HINT: you will need the && operator to take the decision. If you can't solve this one, just watch the solution, it's no problem :)
5. Like before, change the scores to generate different winners, keeping in mind there might be draws.

GOOD LUCK üòÄ
*/
/* 
var johnScore = (89+120+103) / 3;
console.log('John '+johnScore);
var mikeScore = (116+94+123) / 3;
console.log('Mike '+mikeScore);
var marryScore = (97+134+105) / 3;
console.log('Marry '+marryScore);


if (johnScore > mikeScore) {
    console.log('John team is win. Score : '+johnScore + ' Points.');
    console.log('Mike team '+ mikeScore+' points.')
} else if (johnScore < mikeScore) {
    console.log('Mike team is win. Score : '+mikeScore + ' Points');
    console.log('John team '+ johnScore+' points.')
} else {
    console.log('Score is draw.');
    console.log(johnScore + ' = ' +mikeScore);
}


//! ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏¥‡∏î‡∏°‡∏≤‡∏Å
if (johnScore > mikeScore && johnScore > marryScore) {
    console.log('John team is win. Scored : ' + johnScore);
} else if (mikeScore > johnScore && mikeScore > marryScore) {
    console.log('Mike team is win. Scored : ' + mikeScore);
} else if (marryScore > johnScore && marryScore > mikeScore) {
    console.log('Marry team is win. Scored : ' + marryScore);
} else {
    console.log('Scored is draw.');
    if (johnScore === mikeScore) {
        console.log('John is draw Mike with '+ johnScore +' points');
    } else if (mikeScore === marryScore) {
        console.log('Mike is draw Marry with '+ mikeScore +' points');
    } else {
        console.log('John is draw Marry with '+ marryScore +' points');
    }
}
 */

/**************************
 *! Functions
 */
/* 
function calculateAge(birthYear) {
    // birthYear ‡∏Ñ‡∏∑‡∏≠ Argument ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏•‡∏≤‡∏¢‡πÜ argument ‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô comma
    return 2019 - birthYear;
}
// call function pass value
var ageJohn = calculateAge(1992);
// ageJohn ‡πÄ‡∏Å‡πá‡∏ö function ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏°‡∏≤
var ageMike = calculateAge(1999);
var ageJane = calculateAge(2000);
console.log(ageJohn, ageMike, ageJane);

// ‡πÉ‡∏ô function block ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å function ‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
function yearUntilRetirement(year, firstName) {
    var age = calculateAge(year);
    var retirement = 60 - age;
    if (retirement > 0) {
        console.log(firstName + " retires in " + retirement + " years.");
    } else {
        console.log(firstName + " is already retired.");
    }
    //* return function can save result to variable
    // ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏ï‡πà‡∏≠ / function ‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡πÅ‡∏™‡∏î‡∏á console.log ‡πÑ‡∏õ‡πÄ‡∏•‡∏¢
}

yearUntilRetirement(1992, "Bas");
yearUntilRetirement(1976, "Mike");
yearUntilRetirement(1920, "Jane");

// Basic Function
var ourFirstFunction = function() {
    console.log("Hello World");
};
ourFirstFunction();

var fuc = function(agr1, agr2) {
    console.log(agr1);
    console.log(agr2);
};
fuc(1, 2);

// ? ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á return
// return ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏≤‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® variable ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏°‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ fucntion

function increseNumber(x, y) {
    total = x + y;
    console.log("inside function " + total);
    return total;
    // return x
    // ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤ x ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
}
console.log("Outside function " + increseNumber(10, 20));
// ? ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤ total ‡πÑ‡∏î‡πâ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÉ‡∏ô function ‡πÄ‡∏£‡∏≤‡πÉ‡∏™‡πà return ‡πÑ‡∏ß‡πâ

function increseNumber(x, y) {
    total = x + y;
    console.log("inside function " + total);
}
var total = increseNumber(2, 3);
console.log(total);
// ? total undifined ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ return
// ? ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏∑‡∏≠ return ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏≠‡∏≤ function ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠ ‡∏°‡∏±‡∏ô‡∏à‡∏∞ memory ‡∏Ñ‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏ß‡πâ
 */
/**************************
 *! Function statements and Expressions
 */
/* 
//? Normal Function declaration
// function whatDoYouDo(job, firstName) {}

//? Function expression
//? Expression ‡∏à‡∏∞‡∏™‡πà‡∏á result ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å Fuction Declaration ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ statement ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÑ‡∏ß‡πâ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÜ
var whatDoYouDo = function(job,firstName) {
    switch (job) {
        case 'teacher': 
            return firstName + ' teaches kids how to code.';
            //* ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ return ‡πÅ‡∏•‡πâ‡∏ß script ‡∏à‡∏∞‡∏à‡∏ö function ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà break
        case 'driver':
            return firstName + ' driver uber.';
            // TODO ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏° return
        case 'designer':
            return firstName + ' design website.';
        default :
            return firstName + ' does somthing else.';
    }
}

console.log(whatDoYouDo('teacher','John'));
console.log(whatDoYouDo('driver','Mike'));
console.log(whatDoYouDo('designer','Jane'));
console.log(whatDoYouDo('Engineer','Bas'));

//? Function expression vs Function statement
/* 
* Expression produce a value ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
‡πÄ‡∏ä‡πà‡∏ô 2+1
javascript ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô 3

‡πÄ‡∏ä‡πà‡∏ô ‡πÉ‡∏™‡πà whatDoYouDo('teacher','John') ‡∏Å‡πá‡∏à‡∏∞ return value ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤

* Statements perform actions ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤ ‡∏ì ‡∏ï‡∏≠‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô expression ‡πÄ‡∏ä‡πà‡∏ô if/else , while loop
* ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ declaration
‡πÄ‡∏ä‡πà‡∏ô if (true) { console.log(69); }
javascript ‡∏à‡∏∞‡∏™‡πà‡∏á undefined ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ if statement ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏£
  */

/**************************
 *! Arrays = Lists in python
 */
/* 
// ‡∏™‡∏£‡πâ‡∏≤‡∏á array ‡∏õ‡∏Å‡∏ï‡∏¥
var names = ["John", "Mark", "Jane"];
// key 0,1,2

// ‡∏™‡∏£‡πâ‡∏≤‡∏á array ‡∏ú‡πà‡∏≤‡∏ô function
var years = new Array(1900, 1998, 1992);
// Array function ‡∏™‡∏£‡πâ‡∏≤‡∏á array ‡∏ú‡πà‡∏≤‡∏ô new keyword ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ

// ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
console.log(names);
// ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
console.log(names.length);
// ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà 0
console.log(names[0]);

// Mutate array data
names[0] = "Ben";
console.log(names);
names[3] = "Aiib";
// Expand array ‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡∏∏‡∏î
names[names.length] = "Bas";
console.log(names);

// Differnet data types
var john = ["John", "Smith", 1990, "teacher", false];
// * Function for array
// Add value to the end of array
john.push("blue");
// Add value to begin
john.unshift("Mr.");
// Remove element on the end
john.pop();
// Remove element begin
john.shift();
console.log(john);

// Position of value
console.log(john.indexOf(1990));
// ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ value ‡πÉ‡∏ô array ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ -1
console.log(john.indexOf("Bas"));
// Example ‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
var isEngineer =
    john.indexOf("Engineer") === -1
        ? "John is NOT a engineer"
        : "John is engineer";
console.log(isEngineer);
 */
/*****************************
 * TODO CODING CHALLENGE 3
 */

/*
John and his family went on a holiday and went to 3 different restaurants. The bills were $124, $48 and $268.

To tip the waiter a fair amount, John created a simple tip calculator (as a function). He likes to tip 20% of the bill when the bill is less than $50, 15% when the bill is between $50 and $200, and 10% if the bill is more than $200.

In the end, John would like to have 2 arrays:
1) Containing all three tips (one for each bill)
2) Containing all three final paid amounts (bill + tip).

(NOTE: To calculate 20% of a value, simply multiply it with 20/100 = 0.2)

GOOD LUCK üòÄ
*/
/* 
var calculateTips = function(billPay) {
    if (billPay < 50) {
        percentage = 0.2;
        // retrun percentage ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    } else if (billPay >= 50 && billPay < 200) {
        percentage = 0.15;
    } else if (billPay >= 200) {
        percentage = 0.1;
    } else {
        console.log("Vaild value");
    }
    return (tips = billPay * percentage);
    // ? ‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å design ‡πÉ‡∏´‡πâ return ‡∏ó‡∏∏‡∏Å‡∏ö‡∏•‡πá‡∏≠‡∏Å ‡πÅ‡∏ï‡πà‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏°‡∏≤ return ‡∏≠‡∏±‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Å‡πá‡πÑ‡∏î‡πâ ‡πÄ‡∏Å‡πá‡∏ö blo
};

var billPay = [124, 48, 268];
console.log("Bill pay :" + billPay);
var tipsPay = [
    calculateTips(billPay[0]),
    calculateTips(billPay[1]),
    calculateTips(billPay[2])
];
console.log("Tips each restuarant :" + tipsPay);

var paidAmout = [
    billPay[0] + tipsPay[0],
    billPay[1] + tipsPay[1],
    billPay[2] + tipsPay[2]
];
console.log("Total : " + paidAmout);
 */

/**************************
 *! Objects and properties = Dictionary in python
 */
/* 
// Object literal
// key (property) and value
// ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ nested ‡πÉ‡∏ô Objects ‡πÑ‡∏î‡πâ
var john = {
    firstName: "John",
    lastName: "Smith",
    birthYear: 1992,
    family: ["Jane", "Mark", "Bob", "Emily"],
    job: "teacher",
    isMarried: false,
    favoriteFoods : { 
        mallFood : 'KFC',
        streetFood : 'Som Tum'
    }
};

console.log(john);
// read value by key
console.log(john.job);

//* ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏π array ‡πÉ‡∏ô object
console.log(john.favoriteFoods["streetFood"]);

//? ‡∏Å‡∏£‡∏ì‡∏µ‡πÉ‡∏ä‡πâ [] ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà Key string ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏à‡∏∏‡∏î
console.log(john["isMarried"]);
var x = "birthYear";
console.log(john[x]);

// Mutate data
john.job = "designer";
john["isMarried"] = true;
console.log(john);

// Create new Object syntex
var jane = new Object();
jane.firstName = "Jane";
jane.birthYear = 1992;
jane["lastName"] = "Smith";
console.log(jane);
 */

/**************************
 *! Objects and methods
 */
/* 
var john = {
    firstName: "John",
    lastName: "Smith",
    birthYear: 1992,
    family: ["Jane", "Mark", "Bob", "Emily"],
    job: "teacher",
    isMarried: false,
    // ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á function ‡∏ö‡∏≠‡∏Å‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô math ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡∏∏‡∏Å‡∏õ‡∏µ
    calcAge: function() {
        // function(birthYear) ‡πÄ‡∏õ‡πá‡∏ô function expression ‡∏ä‡∏∑‡πà‡∏≠ calcAge
        // return = 2019 - this.birthYear;
        // this = current object ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô john.birthYear ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å key ‡πÉ‡∏ô object ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
        // this ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô self ‡πÉ‡∏ô python
        this.age = 2019 - this.birthYear;
    }
};

// console.log(john.calcAge(john.birthYear));
// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Key calcAge, ‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç john.birthYear = 1992
// * Array and Object ‡πÉ‡∏ä‡πâ method ‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏î‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‡πÄ‡∏ä‡πà‡∏ô pop, unshift

// method in object
// ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô this.birthYear ‡πÉ‡∏ô function
// console.log(john.calcAge());

// ‡πÄ‡∏û‡∏¥‡πà‡∏° key age ‡πÉ‡∏ô object
// john.age = john.calcAge();

// ‡∏≠‡∏µ‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏ô‡∏∂‡∏á‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô return ‡πÉ‡∏ô calcAge ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô this.age = 2019 - this.birthYear ‡∏û‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô function ‡∏Å‡πá‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á age ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡∏¥‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
john.calcAge();
console.log(john);
 */

/*****************************
 * TODO CODING CHALLENGE 4
 */

/*
Let's remember the first coding challenge where Mark and John compared their BMIs. Let's now implement the same functionality with objects and methods.
1. For each of them, create an object with properties for their full name, mass, and height
2. Then, add a method to each object to calculate the BMI. Save the BMI to the object and also return it from the method.
3. In the end, log to the console who has the highest BMI, together with the full name and the respective BMI. Don't forget they might have the same BMI.

Remember: BMI = mass / height^2 = mass / (height * height). (mass in kg and height in meter).

GOOD LUCK üòÄ
*/
// Solution ‡∏ó‡∏≥‡∏ó‡∏µ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠
/* 
var john = {
    fullName: "John Smith",
    mass: 95,
    height: 1.7,
    calcBMI: function() {
        this.bmi = this.mass / (this.height * this.height);
        // this ‡∏Ñ‡∏∑‡∏≠ current object
        return this.bmi;
        // ? ‡∏à‡∏≥‡∏Ñ‡πà‡∏≤‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠
    }
};

var mark = {
    fullName: "Mark Miller",
    mass: 78,
    height: 1.69,
    calcBMI: function() {
        this.bmi = this.mass / (this.height * this.height);
        return this.bmi;
    }
};

// ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏Ñ‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ function ‡∏Å‡πà‡∏≠‡∏ô bmi ‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏°‡∏≤
// ‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ add ‡πÉ‡∏ô if statement ‡∏Å‡πá‡∏ó‡∏≥‡πÑ‡∏î‡πâ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÉ‡∏ô method (‡∏´‡∏£‡∏∑‡∏≠ function) ‡πÉ‡∏™‡πà return ‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß
// john.calcBMI();
// mark.calcBMI();
// console.log(john, mark);

if (john.calcBMI() > mark.calcBMI()) {
    console.log(
        john.fullName +
            " has a higher BMI of " +
            mark.fullName +
            ". BMI :" +
            john.bmi
    );
} else if (john.bmi < mark.bmi) {
    console.log(
        john.fullName +
            " has a less than BMI of " +
            mark.fullName +
            ". Mark BMI :" +
            john.bmi
    );
} else {
    console.log("EQUAL");
}

// ‡∏ï‡∏≠‡∏ô‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ó‡∏≥ ‡∏Å‡πá‡∏ó‡∏≥‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡πÜ ‡∏Å‡∏±‡∏ô ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö class ‡∏Ñ‡∏∑‡∏≠ ‡πÅ‡∏ó‡∏ô‡∏Ñ‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏• ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏≠‡∏Å‡∏°‡∏≤ ‡∏ã‡∏∂‡πà‡∏á‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡∏ó‡∏≥‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
// ? ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ ‡πÉ‡∏ä‡πâ method ‡πÉ‡∏ô object ‡πÑ‡∏õ‡πÄ‡∏•‡∏¢‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
// ? ‡∏à‡∏∞‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö OOP ‡∏Å‡πá‡πÑ‡∏î‡πâ ‡∏Ñ‡∏∑‡∏≠‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠ ‡πÉ‡∏™‡πà‡∏Ñ‡πà‡∏≤ ‡∏Å‡πá‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì BMI ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á
 */

/**************************
 *! Loops and iteration
 */
/* 
// * for loops
// initial condition execuse loop ; second condition execuse ; update couter
for (var i = 0; i < 10; i++) {
    console.log(i);
}
// i = 0, 0 < 10 true, log i to console, i++
// ?.. i = 9 , 9 < 10 true i to log , i++ ‡∏°‡∏±‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô log ‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á ‡πÄ‡∏•‡∏¢‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà 9
// i = 10 , 10 < 10 false , exit loop!

var john = ["John", "Smith", 1990, "designer", false, "blue"];
for (i = 0; i < john.length; i++) {
    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 0 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ array ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏•‡∏≥‡∏î‡∏±‡∏ö 0 ‡πÅ‡∏•‡∏∞ run loop ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ length array
    console.log(john[i]);
}

// * while loops
// ‡∏°‡∏µ‡πÅ‡∏Ñ‡πà condition ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞ execuse ‡πÑ‡∏õ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ ‡πÑ‡∏°‡πà‡∏à‡∏ö
var i = 0;
while (i < john.length) {
    console.log(john[i]);
    i++;
}


// * Continue And Break statement.
var john = ["John", "Smith", 1990, "designer", false, "blue"];
// ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà string
/* 
//? Continue ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å loop
for (var i = 0; i < john.length; i++) {
    if (typeof john[i] !== "string") continue;
    // ? ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà string ‡∏à‡∏∞ skip ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    console.log(john[i]);
}

//? Break ‡∏Ñ‡∏∑‡∏≠‡∏´‡∏¢‡∏∏‡∏î loop
for (var i = 0; i < john.length; i++) {
    if (typeof john[i] !== "string") break;
    console.log(john[i]);
}

//? challenge ‡∏≠‡∏¢‡∏≤‡∏Å loop ‡πÉ‡∏ô array ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏∞‡∏ó‡∏≥‡πÑ‡∏á .. ‡πÉ‡∏ä‡πâ i ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞ ‡∏Å‡πá‡πÉ‡∏ä‡πâ i--
// for (var i = 5; i < john.length; i--) {
for (var i = john.length - 1; i >= 0; i--) {
    // ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏° -1 ‡∏î‡πâ‡∏ß‡∏¢
    if (typeof john[i] !== "string");
    console.log(john[i]);
}
 */

/*****************************
 * TODO CODING CHALLENGE 5
 */

/*
Remember the tip calculator challenge? Let's create a more advanced version using everything we learned!

This time, John and his family went to 5 different restaurants. The bills were $124, $48, $268, $180 and $42.
John likes to tip 20% of the bill when the bill is less than $50, 15% when the bill is between $50 and $200, and 10% if the bill is more than $200.


?‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ó‡∏≥
‡∏™‡∏£‡πâ‡∏≤‡∏á object bill values
‡∏™‡∏£‡πâ‡∏≤‡∏á function calsTips ‡πÇ‡∏î‡∏¢‡∏°‡∏µ loop ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ‡∏¥‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÅ‡∏•‡∏∞ tipCalculate


?Output
2 array / tips ‡πÅ‡∏•‡∏∞ paid amounts

Implement a tip calculator using objects and loops:
1. Create an object with an array for the bill values
2. Add a method to calculate the tip
3. This method should include a loop to iterate over all the paid bills and do the tip calculations
4. As an output, create 1) a new array containing all tips, and 2) an array containing final paid amounts (bill + tip). 
? HINT: Start with two empty arrays [] as properties and then fill them up in the loop.

EXTRA AFTER FINISHING: Mark's family also went on a holiday, going to 4 different restaurants. The bills were $77, $375, $110, and $45.
Mark likes to tip 20% of the bill when the bill is less than $100, 10% when the bill is between $100 and $300, and 25% if the bill is more than $300 (different than John).

5. Implement the same functionality as before, this time using Mark's tipping rules
6. Create a function (not a method) to calculate the average of a given array of tips. HINT: Loop over the array, and in each iteration store the current sum in a variable (starting from 0). After you have the sum of the array, divide it by the number of elements in it (that's how you calculate the average)
7. Calculate the average tip for each family
8. Log to the console which family paid the highest tips on average

GOOD LUCK üòÄ
*/
/* 
// TODO ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1 ‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏Å‡∏î‡πå
// John object bill
var johnBill = [124, 48, 268, 180, 42];
var johnTips = [];
var johnPaidAmouts = [];

// ‡∏Ñ‡∏¥‡∏î tips ‡πÅ‡∏ï‡πà‡∏•‡∏∞ item
for (var i = 0; i < johnBill.length; i++) {
    if (johnBill[i] < 50) {
        percentage = 0.2;
    } else if (johnBill[i] >= 50 && johnBill[i] < 200) {
        percentage = 0.15;
    } else if (johnBill[i] >= 200) {
        percentage = 0.1;
    }
    // console.log(tips);
    johnTips[i] = johnBill[i] * percentage;
    johnPaidAmouts[i] = johnTips[i] + johnBill[i];
}
console.log(johnTips);
console.log(johnPaidAmouts);


// TODO ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2 ‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡πÇ‡∏à‡∏ó‡∏¢‡πå
// var johnBill = [124, 48, 268, 180, 42];
// ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å ‡πÅ‡∏ï‡πà‡πÑ‡∏õ‡πÉ‡∏™‡πà‡πÉ‡∏ô object

var john = {
    bill: [124, 48, 268, 180, 42],
    calcTips: function() {
        this.tips = [];
        // ? ‡∏™‡∏£‡πâ‡∏≤‡∏á empty array ‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô
        for (var i = 0; i < this.bill.length; i++) {
            // ? Member acces left to right ‡πÄ‡∏Ç‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏ã‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏Ç‡∏ß‡∏≤
            if (this.bill[i] < 50) {
                percentage = 0.2;
            } else if (this.bill[i] >= 50 && this.bill[i] < 200) {
                percentage = 0.15;
            } else if (this.bill[i] >= 200) {
                percentage = 0.1;
            }
            this.tips[i] = this.bill[i] * percentage;
            // ! JUM ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà function ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á return ‡∏ß‡πâ‡∏≠‡∏¢
        }
    },

    calcPaidAmounts: function() {
        for (var i = 0; i < this.bill.length; i++) {
            this.paidAmouts = this.bill + this.tips;
        }
    }
};

john.calcTips();
john.calcPaidAmounts();
console.log(john);
console.log("John Tips :" + john.tips);
console.log("John Paid amounts : " + john.paidAmouts);

// TODO Mark
var markBill = [77, 375, 110, 45];
var mark = {
    bill: markBill,
    calcTips: function() {
        this.tips = [];
        // ? ‡∏™‡∏£‡πâ‡∏≤‡∏á empty array ‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô
        for (var i = 0; i < this.bill.length; i++) {
            if (this.bill[i] < 100) {
                percentage = 0.2;
            } else if (this.bill[i] >= 100 && this.bill[i] < 300) {
                percentage = 0.1;
            } else if (this.bill[i] >= 300) {
                percentage = 0.25;
            }
            this.tips[i] = this.bill[i] * percentage;
            // ! JUM ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà function ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á return ‡∏ß‡πâ‡∏≠‡∏¢
        }
    },

    calcPaidAmounts: function() {
        for (var i = 0; i < this.bill.length; i++) {
            this.paidAmouts = this.bill + this.tips;
        }
    }
};

mark.calcTips();
mark.calcPaidAmounts();
console.log(mark);
console.log("Mark Tips :" + mark.tips);
console.log("Mark Paid amounts : " + mark.paidAmouts);

// TODO Average tips
var calcAverage = function(tips) {
    var sum = 0;
    for (i = 0; i < tips.length; i++) {
        sum = sum + tips[i];
    }
    return sum / tips.length;
};

johnAverage = calcAverage(john.tips);
console.log("Average tips john:" + calcAverage(john.tips));
markAverage = calcAverage(mark.tips);
console.log("Average tips mark:" + calcAverage(mark.tips));

// TODO Paid height
if (johnAverage > markAverage) {
    console.log("John paid tips higher than Mark, " + johnAverage);
} else if (johnAverage < markAverage) {
    console.log("Mark paid tips higher than John, " + markAverage);
} else {
    console.log("Is equally.");
}
 */
